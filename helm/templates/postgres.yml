{{- with .Values.deployments.postgres }}
---

# Postgres PVC
#
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  annotations:
    "helm.sh/resource-policy": keep
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
data:
  init.sql: |
    CREATE DATABASE keycloak;
    CREATE DATABASE waltid;

---
# Postgres StatefulSet
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/release: {{ $.Release.Name }}
    spec:
      containers:
        - name: postgres
          image: postgres:{{ .version }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: postgres
          ports:
            - containerPort: 5432
          readinessProbe:
            exec:
              command: [ "sh", "-c", "pg_isready -U $POSTGRES_USER -d waltid -h 127.0.0.1" ]
            initialDelaySeconds: 10     # wait 10s minute before first probe
            periodSeconds: 10           # check every 10s
            failureThreshold: 18        # allow 18 failures (â†’ 180s grace period)
            timeoutSeconds: 5           # each probe times out after 5s
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: init-script
          configMap:
            name: postgres-init
---

# Postgres Service
#
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
      nodePort: {{ .nodePort }}
  selector:
    app.kubernetes.io/name: postgres
---

{{- end }}
